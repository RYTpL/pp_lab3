# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QSize
from PyQt6.QtGui import QPixmap
from PyQt6.QtWidgets import QWidget, QTabWidget, QVBoxLayout, QLabel, QRadioButton, QButtonGroup
from PyQt6.QtWidgets import QMessageBox
from task1 import runtask1
from task2 import runtask2
from task3 import runtask3
from task5 import Iterator


class Ui_MainWindow(QWidget):
    """Main function with with the code of operation of two windows"""

    def setupUi(self, MainWindow) -> None:
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(200, 582)
        self.directory = None
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.CrossCursor))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(20, 130, 151, 71))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(20, 230, 151, 71))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(20, 30, 151, 71))
        self.pushButton_4.setCursor(QtGui.QCursor(
            QtCore.Qt.CursorShape.OpenHandCursor))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(20, 330, 151, 71))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(20, 440, 151, 71))
        self.pushButton_6.setObjectName("pushButton_6")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 200, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow) -> None:
        """open and work first window"""
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_2.setText(_translate("MainWindow", "task1"))
        self.pushButton_3.setText(_translate("MainWindow", "task2"))
        self.pushButton_4.setText(_translate("MainWindow", "select_folder"))
        self.pushButton_5.setText(_translate("MainWindow", "task3"))
        self.pushButton_6.setText(_translate("MainWindow", "photos"))
        self.pushButton_4.clicked.connect(self.get_directory)
        # tasks-start
        self.pushButton_2.clicked.connect(self.task1)
        self.pushButton_3.clicked.connect(self.task2)
        self.pushButton_5.clicked.connect(self.task3)
        # tsaks-end
        self.pushButton_6.clicked.connect(self.opensecondwindow)

    def get_directory(self) -> None:
        """open directory for first 3 tasks"""
        self.directory = QtWidgets.QFileDialog.getExistingDirectory(
            self, "Выбрать папку исходного датасета")
        os.chdir(self.directory)

    def task1(self) -> None:
        """created annotation for datasets, token task1.py from lab2"""
        runtask1(self.directory, 'bay horse', 'annotationbayhorse')
        runtask1(self.directory, 'zebra', 'annotationzebra')

    def task2(self) -> None:
        """created annotation for directory, token task2.py from lab2"""
        runtask2(self.directory, 'directoryTask1', 'annotationTask2')

    def task3(self) -> None:
        """task 3 form lab2, token task3.py from lab2"""
        runtask3(self.directory, 'annotationTask3.csv', 'directorycopy')

    def opensecondwindow(self) -> None:
        """open window with picturies"""
        window = ClassWindow(self)
        window.exec()


class ClassWindow(QtWidgets.QDialog):
    def __init__(self, parent=None) -> None:
        """main function for second window with picturies, store path, specifications of window"""
        super(ClassWindow, self).__init__(parent)
        self.iter = Iterator(os.path.join(
            "D:\\", "pp_lab3", "pp_lab3"), "zebra", "dataset")
        self.pixelmap = QPixmap('.jpg')
        self.resize(900, 1500)
        self.gorizontalLayout = QtWidgets.QFormLayout(self)
        self.gorizontalLayout.setObjectName("gorizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setGeometry(QtCore.QRect(50, 50, 50, 50))
        self.setLayout(self.gorizontalLayout)
        self.setGeometry(50, 50, 50, 50)

        self.pushButton_3 = QtWidgets.QPushButton(self)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.setGeometry(QtCore.QRect(200, 0, 200, 50))

        self.gorizontalLayout.addWidget(self.pushButton)
        self.setWindowTitle("Image")
        self.pushButton.setText("Next")
        self.pushButton.clicked.connect(self.nextButton)
        self.pushButton_3.setText("Close")
        self.pushButton_3.clicked.connect(self.btnClosed)
        self.gorizontalLayout.addWidget(self.pushButton_3)

        pixmap = QPixmap(os.path.join("D:\\", "pp_lab3", "pp_lab3", "dataset",
                         "zebra", "0419.jpg")).scaledToHeight(400).scaledToWidth(400)
        self.lable = QLabel(self)

        self.lable.setPixmap(pixmap)

        self.gorizontalLayout.addWidget(self.lable)

        self.radio_button_1 = QRadioButton('zebra')
        self.radio_button_1.setChecked(True)
        self.radio_button_1.setAccessibleName("zebra")

        self.radio_button_2 = QRadioButton('bay horse')
        self.radio_button_2.setAccessibleName("bay horse")

        self.gorizontalLayout.addWidget(self.radio_button_1)
        self.gorizontalLayout.addWidget(self.radio_button_2)
        self.radio_button_1.clicked.connect(self.clickButton)
        self.radio_button_2.clicked.connect(self.clickButton)

    def clickButton(self) -> None:
        send = self.sender()
        if send.text() == "zebra":
            self.iter.setName(send.text())
            self.iter.getName()
        elif send.text() == "bay horse":
            self.iter.setName(send.text())
            self.iter.getName()

    def nextButton(self) -> None:
        try:
            tmp = os.path.join(os.path.join(
                self.iter.base, self.iter.path, self.iter.name), self.iter.__next__())
            self.pixmap = QPixmap(f"{tmp}").scaledToWidth(
                400).scaledToHeight(400)
            self.lable.setPixmap(self.pixmap)
        except:
            reply = QMessageBox.question(self, 'End of img_class',
                                         "empry, clear?", QMessageBox.Yes |
                                         QMessageBox.No, QMessageBox.Yes)
            if reply == QMessageBox.Yes:
                self.iter.clear()
            print("Error")

    def btnClosed(self) -> None:
        self.close()


if __name__ == "__main__":

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
