# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QSize
from PyQt6.QtGui import QPixmap
from PyQt6.QtWidgets import QWidget, QTabWidget, QVBoxLayout, QLabel, QRadioButton, QButtonGroup
from PyQt6.QtWidgets import QMessageBox
from task1 import run1
from task2 import run2
from task3 import run3
from task5 import Iterator

class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(200, 582)
        self.directory = None
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.CrossCursor))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(20, 130, 151, 71))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(20, 230, 151, 71))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(20, 30, 151, 71))
        self.pushButton_4.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.OpenHandCursor))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(20, 330, 151, 71))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(20, 440, 151, 71))
        self.pushButton_6.setObjectName("pushButton_6")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 200, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_2.setText(_translate("MainWindow", "task1"))
        self.pushButton_3.setText(_translate("MainWindow", "task2"))
        self.pushButton_4.setText(_translate("MainWindow", "select_folder"))
        self.pushButton_5.setText(_translate("MainWindow", "task3"))
        self.pushButton_6.setText(_translate("MainWindow", "photos"))
        self.pushButton_4.clicked.connect(self.get_directory)
        # tasks-start
        self.pushButton_2.clicked.connect(self.task1)
        self.pushButton_3.clicked.connect(self.task2)
        self.pushButton_5.clicked.connect(self.task3)
        # tsaks-end
        #self.pushButton_6.clicked.connect()

    def get_directory(self):
        self.directory = QtWidgets.QFileDialog.getExistingDirectory(self, "Выбрать папку исходного датасета")
        os.chdir(self.directory)

    def task1(self):
        run1(self.directory, 'bay horse', 'annotationbayhorse')
        run1(self.directory, 'zebra', 'annotationzebra')
        
    def task2(self):
        run2(self.directory, 'directoryTask1', 'annotationTask2')

    def task3(self):
        run3(self.directory, 'annotationTask3.csv', 'directorycopy')


if __name__ == "__main__":

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
